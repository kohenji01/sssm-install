<?php
/**
 * =============================================================================================
 *  Project: sssm
 *  File: Install.php
 *  Date: 2020/05/20 14:18
 *  Author: Shoji Ogura <kohenji@sarahsytems.com>
 *  Copyright (c) 2020. SarahSystems lpc.
 *  This software is released under the MIT License, see LICENSE.txt.
 * =============================================================================================
 */

namespace Sssm\Install\Controllers;

use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;
use Exception;
use Psr\Log\LoggerInterface;
use Sssm\Base\Controllers\UserBaseController;
use Sssm\Install\Models\SystemInit;
use function Sssm\Helpers\smarty_body_path;

class Install extends UserBaseController{
    
    public $data=[];
    
    public function initController( RequestInterface $request , ResponseInterface $response , LoggerInterface $logger ){
        parent::initController( $request , $response , $logger ); // TODO: Change the autogenerated stub

        if( file_exists( WRITEPATH . 'sssm_was_installed' ) ){
            die( 'sssm installer is already executed. If you want to run installer again, You should erase ' . WRITEPATH . 'sssm_was_installed file and reload this page.' );
        }
    
        $site_url = site_url();
        if( substr( $site_url , -1 ) == '/' ){
            $site_url = substr( $site_url , 0 , -1 );
        }
        $this->data['site_url'] = $site_url;
        $this->sssm->smartyBodyPath = smarty_body_path(__FILE__);
    }
    
    public function index(){
        
        $this->smarty->assign( 'DATA' , $this->data );
        
        return $this->view( __METHOD__ );
    }
    
    public function set_env_file( $save = '' ){
        try{
            
            $install = new SystemInit();
            if( $save == 'save' ){
            }
    
            $install->runCheckEnv();
        }catch( Exception $e ){
            die( $e->getMessage() );
        }
        $this->smarty->assign( 'DATA' , $install );
        return $this->view( __METHOD__ );
    }

    public function check_writable(){
        $install = new SystemInit();
        $install->runCheckWritable();
        $this->data['checkResult'] = $install->checkResult;
        $this->smarty->assign( 'DATA' , $this->data );
        return $this->view( __METHOD__ );
        
    }
    
    public function test(){
        $install = new SystemInit();
        $install->runEnvValidation();
    }
}